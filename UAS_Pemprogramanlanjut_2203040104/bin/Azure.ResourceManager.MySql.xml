<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.ResourceManager.MySql</name>
    </assembly>
    <members>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion">
            <summary> The version of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.Ver5_7">
            <summary> 5.7. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.Ver8_0_21">
            <summary> 8.0.21. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupListResult">
            <summary> A list of server backups. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupListResult. </summary>
            <param name="value"> The list of backups of a server. </param>
            <param name="nextLink"> The link used to get the next page of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupListResult.Value">
            <summary> The list of backups of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupListResult.NextLink">
            <summary> The link used to get the next page of operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties">
            <summary> Storage Profile properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties.#ctor(System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupProperties. </summary>
            <param name="backupRetentionDays"> Backup retention days for the server. </param>
            <param name="geoRedundantBackup"> Whether or not geo redundant backup is enabled. </param>
            <param name="earliestRestoreOn"> Earliest restore point creation time (ISO8601 format). </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties.BackupRetentionDays">
            <summary> Backup retention days for the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties.GeoRedundantBackup">
            <summary> Whether or not geo redundant backup is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties.EarliestRestoreOn">
            <summary> Earliest restore point creation time (ISO8601 format). </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilitiesListResult">
            <summary> location capability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilitiesListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerCapabilitiesListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilitiesListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerCapabilitiesListResult. </summary>
            <param name="value"> A list of supported capabilities. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilitiesListResult.Value">
            <summary> A list of supported capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilitiesListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties">
            <summary> Location capabilities. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerCapabilityProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability})">
            <summary> Initializes a new instance of MySqlFlexibleServerCapabilityProperties. </summary>
            <param name="zone"> zone name. </param>
            <param name="supportedHAMode"> Supported high availability mode. </param>
            <param name="supportedGeoBackupRegions"> supported geo backup regions. </param>
            <param name="supportedFlexibleServerEditions"> A list of supported flexible server editions. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.Zone">
            <summary> zone name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.SupportedHAMode">
            <summary> Supported high availability mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.SupportedGeoBackupRegions">
            <summary> supported geo backup regions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties.SupportedFlexibleServerEditions">
            <summary> A list of supported flexible server editions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState">
            <summary> If is the configuration dynamic. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.True">
            <summary> True. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.False">
            <summary> False. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState">
            <summary> If is the configuration pending restart or not. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.True">
            <summary> True. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.False">
            <summary> False. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState">
            <summary> If is the configuration read only. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.True">
            <summary> True. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.False">
            <summary> False. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationForBatchUpdate">
            <summary> Represents a Configuration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationForBatchUpdate.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationForBatchUpdate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationForBatchUpdate.Name">
            <summary> Name of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationForBatchUpdate.Value">
            <summary> Value of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationForBatchUpdate.Source">
            <summary> Source of the configuration. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate">
            <summary> A list of server configurations to update. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationListForBatchUpdate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate.Values">
            <summary> The list of server configurations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListResult">
            <summary> A list of server configurations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationListResult. </summary>
            <param name="values"> The list of server configurations. </param>
            <param name="nextLink"> The link used to get the next page of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListResult.Values">
            <summary> The list of server configurations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListResult.NextLink">
            <summary> The link used to get the next page of operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurations">
            <summary> A list of server configurations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurations.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurations.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData})">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurations. </summary>
            <param name="values"> The list of server configurations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurations.Values">
            <summary> The list of server configurations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource">
            <summary> Source of the configuration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.SystemDefault">
            <summary> system-default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.UserOverride">
            <summary> user-override. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode">
            <summary> The mode to create a new MySQL server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.Default">
            <summary> Default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.PointInTimeRestore">
            <summary> PointInTimeRestore. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.Replica">
            <summary> Replica. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.GeoRestore">
            <summary> GeoRestore. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDatabaseListResult">
            <summary> A List of databases. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDatabaseListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerDatabaseListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDatabaseListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerDatabaseListResult. </summary>
            <param name="value"> The list of databases housed in a server. </param>
            <param name="nextLink"> The link used to get the next page of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDatabaseListResult.Value">
            <summary> The list of databases housed in a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDatabaseListResult.NextLink">
            <summary> The link used to get the next page of operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption">
            <summary> The date encryption for cmk. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerDataEncryption. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.#ctor(Azure.Core.ResourceIdentifier,System.Uri,Azure.Core.ResourceIdentifier,System.Uri,System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryptionType})">
            <summary> Initializes a new instance of MySqlFlexibleServerDataEncryption. </summary>
            <param name="primaryUserAssignedIdentityId"> Primary user identity resource id. </param>
            <param name="primaryKeyUri"> Primary key uri. </param>
            <param name="geoBackupUserAssignedIdentityId"> Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup. </param>
            <param name="geoBackupKeyUri"> Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup. </param>
            <param name="encryptionType"> The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.PrimaryUserAssignedIdentityId">
            <summary> Primary user identity resource id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.PrimaryKeyUri">
            <summary> Primary key uri. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.GeoBackupUserAssignedIdentityId">
            <summary> Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.GeoBackupKeyUri">
            <summary> Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption.EncryptionType">
            <summary> The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryptionType">
            <summary> The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryptionType.AzureKeyVault">
            <summary> AzureKeyVault. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryptionType.SystemManaged">
            <summary> SystemManaged. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage">
            <summary> Delegated subnet usage data. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerDelegatedSubnetUsage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage.#ctor(System.String,System.Nullable{System.Int64})">
            <summary> Initializes a new instance of MySqlFlexibleServerDelegatedSubnetUsage. </summary>
            <param name="subnetName"> name of the subnet. </param>
            <param name="usage"> Number of used delegated subnets. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage.SubnetName">
            <summary> name of the subnet. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage.Usage">
            <summary> Number of used delegated subnets. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability">
            <summary> Server edition capabilities. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerEditionCapability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability})">
            <summary> Initializes a new instance of MySqlFlexibleServerEditionCapability. </summary>
            <param name="name"> Server edition name. </param>
            <param name="supportedStorageEditions"> A list of supported storage editions. </param>
            <param name="supportedServerVersions"> A list of supported server versions. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability.Name">
            <summary> Server edition name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability.SupportedStorageEditions">
            <summary> A list of supported storage editions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEditionCapability.SupportedServerVersions">
            <summary> A list of supported server versions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum">
            <summary> Enum to indicate whether value is 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerFirewallRuleListResult">
            <summary> A list of firewall rules. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerFirewallRuleListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerFirewallRuleListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerFirewallRuleListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerFirewallRuleListResult. </summary>
            <param name="value"> The list of firewall rules in a server. </param>
            <param name="nextLink"> The link used to get the next page of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerFirewallRuleListResult.Value">
            <summary> The list of firewall rules in a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerFirewallRuleListResult.NextLink">
            <summary> The link used to get the next page of operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability">
            <summary> Network related properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerHighAvailability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability.#ctor(System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerHighAvailability. </summary>
            <param name="mode"> High availability mode for a server. </param>
            <param name="state"> The state of server high availability. </param>
            <param name="standbyAvailabilityZone"> Availability zone of the standby server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability.Mode">
            <summary> High availability mode for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability.State">
            <summary> The state of server high availability. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability.StandbyAvailabilityZone">
            <summary> Availability zone of the standby server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode">
            <summary> High availability mode for a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.ZoneRedundant">
            <summary> ZoneRedundant. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.SameZone">
            <summary> SameZone. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState">
            <summary> The state of server high availability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.NotEnabled">
            <summary> NotEnabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.CreatingStandby">
            <summary> CreatingStandby. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.Healthy">
            <summary> Healthy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.FailingOver">
            <summary> FailingOver. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.RemovingStandby">
            <summary> RemovingStandby. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailabilityState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerListResult">
            <summary> A list of servers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerListResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerListResult. </summary>
            <param name="value"> The list of servers. </param>
            <param name="nextLink"> The link used to get the next page of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerListResult.Value">
            <summary> The list of servers. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerListResult.NextLink">
            <summary> The link used to get the next page of operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow">
            <summary> Maintenance window of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerMaintenanceWindow. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of MySqlFlexibleServerMaintenanceWindow. </summary>
            <param name="customWindow"> indicates whether custom window is enabled or disabled. </param>
            <param name="startHour"> start hour for maintenance window. </param>
            <param name="startMinute"> start minute for maintenance window. </param>
            <param name="dayOfWeek"> day of week for maintenance window. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.CustomWindow">
            <summary> indicates whether custom window is enabled or disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.StartHour">
            <summary> start hour for maintenance window. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.StartMinute">
            <summary> start minute for maintenance window. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow.DayOfWeek">
            <summary> day of week for maintenance window. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent">
            <summary> Request from client to check resource name availability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent.#ctor(System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerNameAvailabilityContent. </summary>
            <param name="name"> Resource name to verify. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent.Name">
            <summary> Resource name to verify. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent.ResourceType">
            <summary> Resource type used for verification. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult">
            <summary> Represents a resource name availability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerNameAvailabilityResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult.#ctor(System.String,System.Nullable{System.Boolean},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerNameAvailabilityResult. </summary>
            <param name="message"> Error Message. </param>
            <param name="isNameAvailable"> Indicates whether the resource name is available. </param>
            <param name="reason"> Reason for name being unavailable. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult.Message">
            <summary> Error Message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult.IsNameAvailable">
            <summary> Indicates whether the resource name is available. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult.Reason">
            <summary> Reason for name being unavailable. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork">
            <summary> Network related properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerNetwork. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork.#ctor(System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of MySqlFlexibleServerNetwork. </summary>
            <param name="publicNetworkAccess"> Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration. </param>
            <param name="delegatedSubnetResourceId"> Delegated subnet resource id used to setup vnet for a server. </param>
            <param name="privateDnsZoneResourceId"> Private DNS zone resource id. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork.PublicNetworkAccess">
            <summary> Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork.DelegatedSubnetResourceId">
            <summary> Delegated subnet resource id used to setup vnet for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork.PrivateDnsZoneResourceId">
            <summary> Private DNS zone resource id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch">
            <summary> Parameters allowed to update for a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerPatch. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.Identity">
            <summary> The cmk identity for the server. Current supported identity types: UserAssigned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.Sku">
            <summary> The SKU (pricing tier) of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.Tags">
            <summary> Application-specific metadata in the form of key-value pairs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.AdministratorLoginPassword">
            <summary> The password of the administrator login. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.Storage">
            <summary> Storage related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.Backup">
            <summary> Backup related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.HighAvailability">
            <summary> High availability related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.MaintenanceWindow">
            <summary> Maintenance window of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.ReplicationRole">
            <summary> The replication role of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch.DataEncryption">
            <summary> The Data Encryption for CMK. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPrivateDnsZoneSuffixResponse">
            <summary> The response of get private dns zone suffix. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPrivateDnsZoneSuffixResponse.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerPrivateDnsZoneSuffixResponse. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPrivateDnsZoneSuffixResponse.#ctor(System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerPrivateDnsZoneSuffixResponse. </summary>
            <param name="privateDnsZoneSuffix"> Represents the private DNS zone suffix. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPrivateDnsZoneSuffixResponse.PrivateDnsZoneSuffix">
            <summary> Represents the private DNS zone suffix. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole">
            <summary> The replication role. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.None">
            <summary> None. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.Source">
            <summary> Source. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.Replica">
            <summary> Replica. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter">
            <summary> Server restart parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerRestartParameter. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter.RestartWithFailover">
            <summary> Whether or not failover to standby server when restarting a server with high availability enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter.MaxFailoverSeconds">
            <summary> The maximum allowed failover time in seconds. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability">
            <summary> Server version capabilities. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerServerVersionCapability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability})">
            <summary> Initializes a new instance of MySqlFlexibleServerServerVersionCapability. </summary>
            <param name="name"> server version. </param>
            <param name="supportedSkus"> A list of supported Skus. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability.Name">
            <summary> server version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerServerVersionCapability.SupportedSkus">
            <summary> A list of supported Skus. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSku">
            <summary> Billing information related properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSku.#ctor(System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier)">
            <summary> Initializes a new instance of MySqlFlexibleServerSku. </summary>
            <param name="name"> The name of the sku, e.g. Standard_D32s_v3. </param>
            <param name="tier"> The tier of the particular SKU, e.g. GeneralPurpose. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSku.Name">
            <summary> The name of the sku, e.g. Standard_D32s_v3. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSku.Tier">
            <summary> The tier of the particular SKU, e.g. GeneralPurpose. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability">
            <summary> Sku capability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerSkuCapability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary> Initializes a new instance of MySqlFlexibleServerSkuCapability. </summary>
            <param name="name"> vCore name. </param>
            <param name="vCores"> supported vCores. </param>
            <param name="supportedIops"> supported IOPS. </param>
            <param name="supportedMemoryPerVCoreInMB"> supported memory per vCore in MB. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.Name">
            <summary> vCore name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.VCores">
            <summary> supported vCores. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.SupportedIops">
            <summary> supported IOPS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuCapability.SupportedMemoryPerVCoreInMB">
            <summary> supported memory per vCore in MB. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier">
            <summary> The tier of the particular SKU, e.g. GeneralPurpose. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.Burstable">
            <summary> Burstable. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.GeneralPurpose">
            <summary> GeneralPurpose. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.MemoryOptimized">
            <summary> MemoryOptimized. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSkuTier.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState">
            <summary> The state of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Ready">
            <summary> Ready. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Dropping">
            <summary> Dropping. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Starting">
            <summary> Starting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Stopping">
            <summary> Stopping. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Stopped">
            <summary> Stopped. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Updating">
            <summary> Updating. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.op_Equality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.op_Inequality(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.op_Implicit(System.String)~Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.Equals(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage">
            <summary> Storage Profile properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerStorage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerEnableStatusEnum},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerStorage. </summary>
            <param name="storageSizeInGB"> Max storage size allowed for a server. </param>
            <param name="iops"> Storage IOPS for a server. </param>
            <param name="autoGrow"> Enable Storage Auto Grow or not. </param>
            <param name="storageSku"> The sku name of the server storage. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.StorageSizeInGB">
            <summary> Max storage size allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.Iops">
            <summary> Storage IOPS for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.AutoGrow">
            <summary> Enable Storage Auto Grow or not. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage.StorageSku">
            <summary> The sku name of the server storage. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability">
            <summary> storage edition capability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerStorageEditionCapability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary> Initializes a new instance of MySqlFlexibleServerStorageEditionCapability. </summary>
            <param name="name"> storage edition name. </param>
            <param name="minStorageSize"> The minimal supported storage size. </param>
            <param name="maxStorageSize"> The maximum supported storage size. </param>
            <param name="minBackupRetentionDays"> Minimal backup retention days. </param>
            <param name="maxBackupRetentionDays"> Maximum backup retention days. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.Name">
            <summary> storage edition name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.MinStorageSize">
            <summary> The minimal supported storage size. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.MaxStorageSize">
            <summary> The maximum supported storage size. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.MinBackupRetentionDays">
            <summary> Minimal backup retention days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorageEditionCapability.MaxBackupRetentionDays">
            <summary> Maximum backup retention days. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter">
            <summary> Virtual network subnet usage parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerVirtualNetworkSubnetUsageParameter. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter.VirtualNetworkResourceId">
            <summary> Virtual network resource id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult">
            <summary> Virtual network subnet usage data. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerVirtualNetworkSubnetUsageResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDelegatedSubnetUsage})">
            <summary> Initializes a new instance of MySqlFlexibleServerVirtualNetworkSubnetUsageResult. </summary>
            <param name="delegatedSubnetsUsage"> A list of delegated subnet usage. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult.DelegatedSubnetsUsage">
            <summary> A list of delegated subnet usage. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.MySql.FlexibleServers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.ExecuteGetPrivateDnsZoneSuffixAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)">
            <summary>
            Get private DNS zone suffix in the cloud.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GetPrivateDnsZoneSuffix_Execute</description>
            </item>
            </list>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.ExecuteGetPrivateDnsZoneSuffix(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)">
            <summary>
            Get private DNS zone suffix in the cloud.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GetPrivateDnsZoneSuffix_Execute</description>
            </item>
            </list>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServers(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetLocationBasedCapabilitiesAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedCapabilities_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetLocationBasedCapabilities(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedCapabilities_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.ExecuteCheckVirtualNetworkSubnetUsageAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckVirtualNetworkSubnetUsage_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.ExecuteCheckVirtualNetworkSubnetUsage(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckVirtualNetworkSubnetUsage_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.CheckMySqlFlexibleServerNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for server
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.CheckMySqlFlexibleServerNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for server
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServers(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of MySqlFlexibleServerResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of MySqlFlexibleServerResources and their operations over a MySqlFlexibleServerResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServer(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerBackupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerFirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersExtensions.GetMySqlFlexibleServerConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ResourceGroupResourceExtensionClient.GetMySqlFlexibleServers">
            <summary> Gets a collection of MySqlFlexibleServerResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of MySqlFlexibleServerResources and their operations over a MySqlFlexibleServerResource. </returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.GetMySqlFlexibleServersAsync(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.GetMySqlFlexibleServers(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.GetLocationBasedCapabilitiesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedCapabilities_List</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.GetLocationBasedCapabilities(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedCapabilities_List</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.ExecuteCheckVirtualNetworkSubnetUsageAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckVirtualNetworkSubnetUsage_Execute</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.ExecuteCheckVirtualNetworkSubnetUsage(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckVirtualNetworkSubnetUsage_Execute</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.CheckMySqlFlexibleServerNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for server
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.SubscriptionResourceExtensionClient.CheckMySqlFlexibleServerNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for server
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient">
            <summary> A class to add extension methods to TenantResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient.ExecuteGetPrivateDnsZoneSuffixAsync(System.Threading.CancellationToken)">
            <summary>
            Get private DNS zone suffix in the cloud.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GetPrivateDnsZoneSuffix_Execute</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.TenantResourceExtensionClient.ExecuteGetPrivateDnsZoneSuffix(System.Threading.CancellationToken)">
            <summary>
            Get private DNS zone suffix in the cloud.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GetPrivateDnsZoneSuffix_Execute</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.#ctor">
            <summary> Initializes a new instance of FlexibleServersArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.#ctor">
            <summary> Initializes a new instance of FlexibleServersArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FlexibleServersArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData">
            <summary> A class representing the MySqlFlexibleServerBackup data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerBackupData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="backupType"> Backup type. </param>
            <param name="completedOn"> Backup completed time (ISO8601 format). </param>
            <param name="source"> Backup source. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData.BackupType">
            <summary> Backup type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData.CompletedOn">
            <summary> Backup completed time (ISO8601 format). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData.Source">
            <summary> Backup source. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData">
            <summary> A class representing the MySqlFlexibleServerConfiguration data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationSource},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigReadOnlyState},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigPendingRestartState},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigDynamicState})">
            <summary> Initializes a new instance of MySqlFlexibleServerConfigurationData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="value"> Value of the configuration. </param>
            <param name="description"> Description of the configuration. </param>
            <param name="defaultValue"> Default value of the configuration. </param>
            <param name="dataType"> Data type of the configuration. </param>
            <param name="allowedValues"> Allowed values of the configuration. </param>
            <param name="source"> Source of the configuration. </param>
            <param name="isReadOnly"> If is the configuration read only. </param>
            <param name="isConfigPendingRestart"> If is the configuration pending restart or not. </param>
            <param name="isDynamicConfig"> If is the configuration dynamic. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.Value">
            <summary> Value of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.Description">
            <summary> Description of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.DefaultValue">
            <summary> Default value of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.DataType">
            <summary> Data type of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.AllowedValues">
            <summary> Allowed values of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.Source">
            <summary> Source of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.IsReadOnly">
            <summary> If is the configuration read only. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.IsConfigPendingRestart">
            <summary> If is the configuration pending restart or not. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData.IsDynamicConfig">
            <summary> If is the configuration dynamic. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData">
            <summary> A class representing the MySqlFlexibleServer data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of MySqlFlexibleServerData. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerSku,System.String,System.String,System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVersion},System.String,System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCreateMode},Azure.Core.ResourceIdentifier,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerReplicationRole},System.Nullable{System.Int32},Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerDataEncryption,System.Nullable{Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerState},System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerStorage,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerBackupProperties,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerHighAvailability,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNetwork,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerMaintenanceWindow)">
            <summary> Initializes a new instance of MySqlFlexibleServerData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="identity"> The cmk identity for the server. Current supported identity types: UserAssigned. </param>
            <param name="sku"> The SKU (pricing tier) of the server. </param>
            <param name="administratorLogin"> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). </param>
            <param name="administratorLoginPassword"> The password of the administrator login (required for server creation). </param>
            <param name="version"> Server version. </param>
            <param name="availabilityZone"> availability Zone information of the server. </param>
            <param name="createMode"> The mode to create a new MySQL server. </param>
            <param name="sourceServerResourceId"> The source MySQL server id. </param>
            <param name="restorePointInTime"> Restore point creation time (ISO8601 format), specifying the time to restore from. </param>
            <param name="replicationRole"> The replication role. </param>
            <param name="replicaCapacity"> The maximum number of replicas that a primary server can have. </param>
            <param name="dataEncryption"> The Data Encryption for CMK. </param>
            <param name="state"> The state of a server. </param>
            <param name="fullyQualifiedDomainName"> The fully qualified domain name of a server. </param>
            <param name="storage"> Storage related properties of a server. </param>
            <param name="backup"> Backup related properties of a server. </param>
            <param name="highAvailability"> High availability related properties of a server. </param>
            <param name="network"> Network related properties of a server. </param>
            <param name="maintenanceWindow"> Maintenance window of a server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Identity">
            <summary> The cmk identity for the server. Current supported identity types: UserAssigned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Sku">
            <summary> The SKU (pricing tier) of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.AdministratorLogin">
            <summary> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.AdministratorLoginPassword">
            <summary> The password of the administrator login (required for server creation). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Version">
            <summary> Server version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.AvailabilityZone">
            <summary> availability Zone information of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.CreateMode">
            <summary> The mode to create a new MySQL server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.SourceServerResourceId">
            <summary> The source MySQL server id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.RestorePointInTime">
            <summary> Restore point creation time (ISO8601 format), specifying the time to restore from. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.ReplicationRole">
            <summary> The replication role. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.ReplicaCapacity">
            <summary> The maximum number of replicas that a primary server can have. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.DataEncryption">
            <summary> The Data Encryption for CMK. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.State">
            <summary> The state of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.FullyQualifiedDomainName">
            <summary> The fully qualified domain name of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Storage">
            <summary> Storage related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Backup">
            <summary> Backup related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.HighAvailability">
            <summary> High availability related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.Network">
            <summary> Network related properties of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData.MaintenanceWindow">
            <summary> Maintenance window of a server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData">
            <summary> A class representing the MySqlFlexibleServerDatabase data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData.#ctor">
            <summary> Initializes a new instance of MySqlFlexibleServerDatabaseData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String)">
            <summary> Initializes a new instance of MySqlFlexibleServerDatabaseData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="charset"> The charset of the database. </param>
            <param name="collation"> The collation of the database. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData.Charset">
            <summary> The charset of the database. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData.Collation">
            <summary> The collation of the database. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData">
            <summary> A class representing the MySqlFlexibleServerFirewallRule data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary> Initializes a new instance of MySqlFlexibleServerFirewallRuleData. </summary>
            <param name="startIPAddress"> The start IP address of the server firewall rule. Must be IPv4 format. </param>
            <param name="endIPAddress"> The end IP address of the server firewall rule. Must be IPv4 format. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="startIPAddress" /> or <paramref name="endIPAddress" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Net.IPAddress,System.Net.IPAddress)">
            <summary> Initializes a new instance of MySqlFlexibleServerFirewallRuleData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="startIPAddress"> The start IP address of the server firewall rule. Must be IPv4 format. </param>
            <param name="endIPAddress"> The end IP address of the server firewall rule. Must be IPv4 format. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData.StartIPAddress">
            <summary> The start IP address of the server firewall rule. Must be IPv4 format. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData.EndIPAddress">
            <summary> The end IP address of the server firewall rule. Must be IPv4 format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection" /> instance call the GetMySqlFlexibleServerBackups method from an instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource">
            <summary>
            A Class representing a MySqlFlexibleServerBackup along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFlexibleServerBackupResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> using the GetMySqlFlexibleServerBackup method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupResource.Get(System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection" /> instance call the GetMySqlFlexibleServers method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData,System.Threading.CancellationToken)">
            <summary>
            Creates a new server or updates an existing server. The update action will overwrite the existing server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Create</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData,System.Threading.CancellationToken)">
            <summary>
            Creates a new server or updates an existing server. The update action will overwrite the existing server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Create</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_ListByResourceGroup</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_ListByResourceGroup</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.GetReplicasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the replicas for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Replicas_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.GetReplicas(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the replicas for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Replicas_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection" /> instance call the GetMySqlFlexibleServerConfigurations method from an instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource">
            <summary>
            A Class representing a MySqlFlexibleServerConfiguration along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFlexibleServerConfigurationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> using the GetMySqlFlexibleServerConfiguration method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection" /> instance call the GetMySqlFlexibleServerDatabases method from an instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the databases in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the databases in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource">
            <summary>
            A Class representing a MySqlFlexibleServerDatabase along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFlexibleServerDatabaseResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> using the GetMySqlFlexibleServerDatabase method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection" /> instance call the GetMySqlFlexibleServerFirewallRules method from an instance of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the firewall rules in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the firewall rules in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource">
            <summary>
            A Class representing a MySqlFlexibleServerFirewallRule along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFlexibleServerFirewallRuleResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> using the GetMySqlFlexibleServerFirewallRule method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource">
            <summary>
            A Class representing a MySqlFlexibleServer along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFlexibleServerResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetMySqlFlexibleServer method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerBackups">
            <summary> Gets a collection of MySqlFlexibleServerBackupResources in the MySqlFlexibleServer. </summary>
            <returns> An object representing collection of MySqlFlexibleServerBackupResources and their operations over a MySqlFlexibleServerBackupResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerBackupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerBackup(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the backups for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Backups_Get</description>
            </item>
            </list>
            </summary>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="backupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerFirewallRules">
            <summary> Gets a collection of MySqlFlexibleServerFirewallRuleResources in the MySqlFlexibleServer. </summary>
            <returns> An object representing collection of MySqlFlexibleServerFirewallRuleResources and their operations over a MySqlFlexibleServerFirewallRuleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerFirewallRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerFirewallRule(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerDatabases">
            <summary> Gets a collection of MySqlFlexibleServerDatabaseResources in the MySqlFlexibleServer. </summary>
            <returns> An object representing collection of MySqlFlexibleServerDatabaseResources and their operations over a MySqlFlexibleServerDatabaseResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerDatabase(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerConfigurations">
            <summary> Gets a collection of MySqlFlexibleServerConfigurationResources in the MySqlFlexibleServer. </summary>
            <returns> An object representing collection of MySqlFlexibleServerConfigurationResources and their operations over a MySqlFlexibleServerConfigurationResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerConfigurationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetMySqlFlexibleServerConfiguration(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.FailoverAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Manual failover a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Failover</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Failover(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Manual failover a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Failover</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.RestartAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter,System.Threading.CancellationToken)">
            <summary>
            Restarts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Restart</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="mySqlFlexibleServerRestartParameter"> The required parameters for restarting a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerRestartParameter" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Restart(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter,System.Threading.CancellationToken)">
            <summary>
            Restarts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Restart</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="mySqlFlexibleServerRestartParameter"> The required parameters for restarting a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerRestartParameter" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.StartAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Starts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Start</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Start(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Starts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Start</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.StopAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Stops a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Stop</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.Stop(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Stops a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Stop</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.UpdateConfigurationsAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a list of configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/updateConfigurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_BatchUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="mySqlFlexibleServerConfigurationListForBatchUpdate"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerConfigurationListForBatchUpdate" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.UpdateConfigurations(Azure.WaitUntil,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a list of configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/updateConfigurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_BatchUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="mySqlFlexibleServerConfigurationListForBatchUpdate"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="mySqlFlexibleServerConfigurationListForBatchUpdate" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of BackupsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="backupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="backupName"> The name of the backup. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="backupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.BackupsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the backups for a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckNameAvailabilityRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of CheckNameAvailabilityRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckNameAvailabilityRestOperations.ExecuteAsync(System.String,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Check the availability of name for server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckNameAvailabilityRestOperations.Execute(System.String,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Check the availability of name for server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="content"> The required parameters for checking if server name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckVirtualNetworkSubnetUsageRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of CheckVirtualNetworkSubnetUsageRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckVirtualNetworkSubnetUsageRestOperations.ExecuteAsync(System.String,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary> Get virtual network subnet usage for a given vNet resource id. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.CheckVirtualNetworkSubnetUsageRestOperations.Execute(System.String,Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)">
            <summary> Get virtual network subnet usage for a given vNet resource id. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ConfigurationsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData,System.Threading.CancellationToken)">
            <summary> Updates a configuration of a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationData,System.Threading.CancellationToken)">
            <summary> Updates a configuration of a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a configuration of server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a configuration of server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.BatchUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate,System.Threading.CancellationToken)">
            <summary> Update a list of configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="mySqlFlexibleServerConfigurationListForBatchUpdate"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="mySqlFlexibleServerConfigurationListForBatchUpdate" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.BatchUpdate(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerConfigurationListForBatchUpdate,System.Threading.CancellationToken)">
            <summary> Update a list of configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="mySqlFlexibleServerConfigurationListForBatchUpdate"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="mySqlFlexibleServerConfigurationListForBatchUpdate" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ConfigurationsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DatabasesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary> Creates a new database or updates an existing database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseData,System.Threading.CancellationToken)">
            <summary> Creates a new database or updates an existing database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.DatabasesRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of FirewallRulesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary> Creates a new firewall rule or updates an existing firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleData,System.Threading.CancellationToken)">
            <summary> Creates a new firewall rule or updates an existing firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.FirewallRulesRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.GetPrivateDnsZoneSuffixRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of GetPrivateDnsZoneSuffixRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.GetPrivateDnsZoneSuffixRestOperations.ExecuteAsync(System.Threading.CancellationToken)">
            <summary> Get private DNS zone suffix in the cloud. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.GetPrivateDnsZoneSuffixRestOperations.Execute(System.Threading.CancellationToken)">
            <summary> Get private DNS zone suffix in the cloud. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.LocationBasedCapabilitiesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of LocationBasedCapabilitiesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.LocationBasedCapabilitiesRestOperations.ListAsync(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Get capabilities at specified location in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.LocationBasedCapabilitiesRestOperations.List(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Get capabilities at specified location in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.LocationBasedCapabilitiesRestOperations.ListNextPageAsync(System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Get capabilities at specified location in a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.LocationBasedCapabilitiesRestOperations.ListNextPage(System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Get capabilities at specified location in a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ReplicasRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ReplicasRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ReplicasRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ReplicasRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ReplicasRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ReplicasRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.CreateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData,System.Threading.CancellationToken)">
            <summary> Creates a new server or updates an existing server. The update action will overwrite the existing server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Create(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerData,System.Threading.CancellationToken)">
            <summary> Creates a new server or updates an existing server. The update action will overwrite the existing server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing server. The request body can contain one to many of the properties present in the normal server definition. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing server. The request body can contain one to many of the properties present in the normal server definition. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.FailoverAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Manual failover a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Failover(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Manual failover a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.RestartAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter,System.Threading.CancellationToken)">
            <summary> Restarts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="mySqlFlexibleServerRestartParameter"> The required parameters for restarting a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="mySqlFlexibleServerRestartParameter" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Restart(System.String,System.String,System.String,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerRestartParameter,System.Threading.CancellationToken)">
            <summary> Restarts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="mySqlFlexibleServerRestartParameter"> The required parameters for restarting a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="mySqlFlexibleServerRestartParameter" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.StartAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Starts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Start(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Starts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.StopAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stops a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.Stop(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stops a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.ServersRestOperations.ListNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum">
            <summary> Enforce a minimal Tls version for the server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.Tls1_0">
            <summary> TLS1_0. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.Tls1_1">
            <summary> TLS1_1. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.Tls1_2">
            <summary> TLS1_2. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.TLSEnforcementDisabled">
            <summary> TLSEnforcementDisabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.op_Equality(Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum,Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum,Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.Equals(Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerVersion">
            <summary> The version of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerVersion" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerVersion.Ver5_6">
            <summary> 5.6. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerVersion.Ver5_7">
            <summary> 5.7. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerVersion.Ver8_0">
            <summary> 8.0. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.op_Equality(Azure.ResourceManager.MySql.Models.MySqlServerVersion,Azure.ResourceManager.MySql.Models.MySqlServerVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerVersion" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlServerVersion,Azure.ResourceManager.MySql.Models.MySqlServerVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerVersion" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlServerVersion">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerVersion" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.Equals(Azure.ResourceManager.MySql.Models.MySqlServerVersion)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerVersion.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlAdministratorType">
            <summary> The type of administrator. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlAdministratorType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.ActiveDirectory">
            <summary> ActiveDirectory. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.op_Equality(Azure.ResourceManager.MySql.Models.MySqlAdministratorType,Azure.ResourceManager.MySql.Models.MySqlAdministratorType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlAdministratorType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlAdministratorType,Azure.ResourceManager.MySql.Models.MySqlAdministratorType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlAdministratorType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlAdministratorType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlAdministratorType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.Equals(Azure.ResourceManager.MySql.Models.MySqlAdministratorType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdministratorType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlAdvisorListResult">
            <summary> A list of query statistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdvisorListResult.#ctor">
            <summary> Initializes a new instance of MySqlAdvisorListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlAdvisorListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlAdvisorData},System.String)">
            <summary> Initializes a new instance of MySqlAdvisorListResult. </summary>
            <param name="value"> The list of recommendation action advisors. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlAdvisorListResult.Value">
            <summary> The list of recommendation action advisors. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlAdvisorListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlConfigurations">
            <summary> A list of server configurations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlConfigurations.#ctor">
            <summary> Initializes a new instance of MySqlConfigurations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlConfigurations.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.MySql.MySqlConfigurationData})">
            <summary> Initializes a new instance of MySqlConfigurations. </summary>
            <param name="values"> The list of server configurations. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlConfigurations.Values">
            <summary> The list of server configurations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlCreateMode">
            <summary> The mode to create a new server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlCreateMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlCreateMode.Default">
            <summary> Default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlCreateMode.PointInTimeRestore">
            <summary> PointInTimeRestore. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlCreateMode.GeoRestore">
            <summary> GeoRestore. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlCreateMode.Replica">
            <summary> Replica. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.op_Equality(Azure.ResourceManager.MySql.Models.MySqlCreateMode,Azure.ResourceManager.MySql.Models.MySqlCreateMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlCreateMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlCreateMode,Azure.ResourceManager.MySql.Models.MySqlCreateMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlCreateMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlCreateMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlCreateMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.Equals(Azure.ResourceManager.MySql.Models.MySqlCreateMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlCreateMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlDatabaseListResult">
            <summary> A List of databases. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlDatabaseListResult.#ctor">
            <summary> Initializes a new instance of MySqlDatabaseListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlDatabaseListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlDatabaseData})">
            <summary> Initializes a new instance of MySqlDatabaseListResult. </summary>
            <param name="value"> The list of databases housed in a server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlDatabaseListResult.Value">
            <summary> The list of databases housed in a server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlFirewallRuleListResult">
            <summary> A list of firewall rules. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlFirewallRuleListResult.#ctor">
            <summary> Initializes a new instance of MySqlFirewallRuleListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlFirewallRuleListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlFirewallRuleData})">
            <summary> Initializes a new instance of MySqlFirewallRuleListResult. </summary>
            <param name="value"> The list of firewall rules in a server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlFirewallRuleListResult.Value">
            <summary> The list of firewall rules in a server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup">
            <summary> Enable Geo-redundant or not for server backup. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.op_Equality(Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup,Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup,Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.Equals(Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption">
            <summary> Add a second layer of encryption for your data using new encryption algorithm which gives additional data protection. Value is optional but if passed in, must be 'Disabled' or 'Enabled'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.Enabled">
            <summary> Default value for single layer of encryption for data at rest. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.Disabled">
            <summary> Additional (2nd) layer of encryption for data at rest. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.op_Equality(Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption,Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption,Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.Equals(Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlLogFile">
            <summary> Represents a log file. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlLogFile.#ctor">
            <summary> Initializes a new instance of MySqlLogFile. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlLogFile.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Uri)">
            <summary> Initializes a new instance of MySqlLogFile. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="sizeInKB"> Size of the log file. </param>
            <param name="createdOn"> Creation timestamp of the log file. </param>
            <param name="lastModifiedOn"> Last modified timestamp of the log file. </param>
            <param name="logFileType"> Type of the log file. </param>
            <param name="uri"> The url to download the log file from. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFile.SizeInKB">
            <summary> Size of the log file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFile.CreatedOn">
            <summary> Creation timestamp of the log file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFile.LastModifiedOn">
            <summary> Last modified timestamp of the log file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFile.LogFileType">
            <summary> Type of the log file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFile.Uri">
            <summary> The url to download the log file from. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlLogFileListResult">
            <summary> A list of log files. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlLogFileListResult.#ctor">
            <summary> Initializes a new instance of MySqlLogFileListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlLogFileListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.Models.MySqlLogFile})">
            <summary> Initializes a new instance of MySqlLogFileListResult. </summary>
            <param name="value"> The list of log files. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlLogFileListResult.Value">
            <summary> The list of log files. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent">
            <summary> Request from client to check resource name availability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent.#ctor(System.String)">
            <summary> Initializes a new instance of MySqlNameAvailabilityContent. </summary>
            <param name="name"> Resource name to verify. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent.Name">
            <summary> Resource name to verify. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent.ResourceType">
            <summary> Resource type used for verification. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult">
            <summary> Represents a resource name availability. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult.#ctor">
            <summary> Initializes a new instance of MySqlNameAvailabilityResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult.#ctor(System.String,System.Nullable{System.Boolean},System.String)">
            <summary> Initializes a new instance of MySqlNameAvailabilityResult. </summary>
            <param name="message"> Error Message. </param>
            <param name="isNameAvailable"> Indicates whether the resource name is available. </param>
            <param name="reason"> Reason for name being unavailable. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult.Message">
            <summary> Error Message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult.IsNameAvailable">
            <summary> Indicates whether the resource name is available. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityResult.Reason">
            <summary> Reason for name being unavailable. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier">
            <summary> Performance tier properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.#ctor">
            <summary> Initializes a new instance of MySqlPerformanceTier. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives})">
            <summary> Initializes a new instance of MySqlPerformanceTier. </summary>
            <param name="id"> ID of the performance tier. </param>
            <param name="maxBackupRetentionDays"> Maximum Backup retention in days for the performance tier edition. </param>
            <param name="minBackupRetentionDays"> Minimum Backup retention in days for the performance tier edition. </param>
            <param name="maxStorageInMB"> Max storage allowed for a server. </param>
            <param name="minLargeStorageInMB"> Max storage allowed for a server. </param>
            <param name="maxLargeStorageInMB"> Max storage allowed for a server. </param>
            <param name="minStorageInMB"> Max storage allowed for a server. </param>
            <param name="serviceLevelObjectives"> Service level objectives associated with the performance tier. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.Id">
            <summary> ID of the performance tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MaxBackupRetentionDays">
            <summary> Maximum Backup retention in days for the performance tier edition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MinBackupRetentionDays">
            <summary> Minimum Backup retention in days for the performance tier edition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MaxStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MinLargeStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MaxLargeStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.MinStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier.ServiceLevelObjectives">
            <summary> Service level objectives associated with the performance tier. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierListResult">
            <summary> A list of performance tiers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierListResult.#ctor">
            <summary> Initializes a new instance of MySqlPerformanceTierListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.Models.MySqlPerformanceTier})">
            <summary> Initializes a new instance of MySqlPerformanceTierListResult. </summary>
            <param name="value"> The list of performance tiers. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierListResult.Value">
            <summary> The list of performance tiers. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives">
            <summary> Service level objectives for performance tier. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.#ctor">
            <summary> Initializes a new instance of MySqlPerformanceTierServiceLevelObjectives. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of MySqlPerformanceTierServiceLevelObjectives. </summary>
            <param name="id"> ID for the service level objective. </param>
            <param name="edition"> Edition of the performance tier. </param>
            <param name="vCores"> vCore associated with the service level objective. </param>
            <param name="hardwareGeneration"> Hardware generation associated with the service level objective. </param>
            <param name="maxBackupRetentionDays"> Maximum Backup retention in days for the performance tier edition. </param>
            <param name="minBackupRetentionDays"> Minimum Backup retention in days for the performance tier edition. </param>
            <param name="maxStorageInMB"> Max storage allowed for a server. </param>
            <param name="minStorageInMB"> Max storage allowed for a server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.Id">
            <summary> ID for the service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.Edition">
            <summary> Edition of the performance tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.VCores">
            <summary> vCore associated with the service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.HardwareGeneration">
            <summary> Hardware generation associated with the service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.MaxBackupRetentionDays">
            <summary> Maximum Backup retention in days for the performance tier edition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.MinBackupRetentionDays">
            <summary> Minimum Backup retention in days for the performance tier edition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.MaxStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPerformanceTierServiceLevelObjectives.MinStorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionListResult">
            <summary> A list of private endpoint connections. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionListResult.#ctor">
            <summary> Initializes a new instance of MySqlPrivateEndpointConnectionListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData},System.String)">
            <summary> Initializes a new instance of MySqlPrivateEndpointConnectionListResult. </summary>
            <param name="value"> Array of results. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionListResult.Value">
            <summary> Array of results. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch">
            <summary> Tags object for patch operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch.#ctor">
            <summary> Initializes a new instance of MySqlPrivateEndpointConnectionPatch. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState">
            <summary> State of the private endpoint connection. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Approving">
            <summary> Approving. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Ready">
            <summary> Ready. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Dropping">
            <summary> Dropping. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Rejecting">
            <summary> Rejecting. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.op_Equality(Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.Equals(Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceListResult">
            <summary> A list of private link resources. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceListResult.#ctor">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData},System.String)">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceListResult. </summary>
            <param name="value"> Array of results. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceListResult.Value">
            <summary> Array of results. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties">
            <summary> Properties of a private link resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties.#ctor">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceProperties. </summary>
            <param name="groupId"> The private link resource group id. </param>
            <param name="requiredMembers"> The private link resource required member names. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties.GroupId">
            <summary> The private link resource group id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties.RequiredMembers">
            <summary> The private link resource required member names. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty">
            <summary> The MySqlPrivateLinkServiceConnectionStateProperty. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of MySqlPrivateLinkServiceConnectionStateProperty. </summary>
            <param name="status"> The private link service connection status. </param>
            <param name="description"> The private link service connection description. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="status" /> or <paramref name="description" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of MySqlPrivateLinkServiceConnectionStateProperty. </summary>
            <param name="status"> The private link service connection status. </param>
            <param name="description"> The private link service connection description. </param>
            <param name="actionsRequired"> The actions required for private link service connection. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty.Status">
            <summary> The private link service connection status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty.Description">
            <summary> The private link service connection description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty.ActionsRequired">
            <summary> The actions required for private link service connection. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction">
            <summary> The actions required for private link service connection. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.None">
            <summary> None. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.op_Equality(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.Equals(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus">
            <summary> The private link service connection status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Approved">
            <summary> Approved. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Pending">
            <summary> Pending. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Rejected">
            <summary> Rejected. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Disconnected">
            <summary> Disconnected. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.op_Equality(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.Equals(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum">
            <summary> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.op_Equality(Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum,Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum,Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.Equals(Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResult">
            <summary> Result of Query Performance Insight data reset. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResult.#ctor">
            <summary> Initializes a new instance of MySqlQueryPerformanceInsightResetDataResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResult.#ctor(System.Nullable{Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState},System.String)">
            <summary> Initializes a new instance of MySqlQueryPerformanceInsightResetDataResult. </summary>
            <param name="status"> Indicates result of the operation. </param>
            <param name="message"> operation message. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResult.Status">
            <summary> Indicates result of the operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResult.Message">
            <summary> operation message. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState">
            <summary> Indicates result of the operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.op_Equality(Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState,Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState,Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.Equals(Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryPerformanceInsightResetDataResultState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlQueryTextListResult">
            <summary> A list of query texts. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryTextListResult.#ctor">
            <summary> Initializes a new instance of MySqlQueryTextListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlQueryTextListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlQueryTextData},System.String)">
            <summary> Initializes a new instance of MySqlQueryTextListResult. </summary>
            <param name="value"> The list of query texts. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryTextListResult.Value">
            <summary> The list of query texts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlQueryTextListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlRecommendationActionListResult">
            <summary> A list of recommendation actions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlRecommendationActionListResult.#ctor">
            <summary> Initializes a new instance of MySqlRecommendationActionListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlRecommendationActionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlRecommendationActionData},System.String)">
            <summary> Initializes a new instance of MySqlRecommendationActionListResult. </summary>
            <param name="value"> The list of recommendation action advisors. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecommendationActionListResult.Value">
            <summary> The list of recommendation action advisors. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecommendationActionListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData">
            <summary> A recoverable server resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.#ctor">
            <summary> Initializes a new instance of MySqlRecoverableServerResourceData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary> Initializes a new instance of MySqlRecoverableServerResourceData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastAvailableBackupOn"> The last available backup date time. </param>
            <param name="serviceLevelObjective"> The service level objective. </param>
            <param name="edition"> Edition of the performance tier. </param>
            <param name="vCores"> vCore associated with the service level objective. </param>
            <param name="hardwareGeneration"> Hardware generation associated with the service level objective. </param>
            <param name="version"> The MySQL version. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.LastAvailableBackupOn">
            <summary> The last available backup date time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.ServiceLevelObjective">
            <summary> The service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.Edition">
            <summary> Edition of the performance tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.VCores">
            <summary> vCore associated with the service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.HardwareGeneration">
            <summary> Hardware generation associated with the service level objective. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlRecoverableServerResourceData.Version">
            <summary> The MySQL version. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName">
            <summary> The MySqlSecurityAlertPolicyName. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.Default">
            <summary> Default. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.op_Equality(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.Equals(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerAdministratorListResult">
            <summary> The response to a list Active Directory Administrators request. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerAdministratorListResult.#ctor">
            <summary> Initializes a new instance of MySqlServerAdministratorListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerAdministratorListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlServerAdministratorData})">
            <summary> Initializes a new instance of MySqlServerAdministratorListResult. </summary>
            <param name="value"> The list of server Active Directory Administrators for the server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerAdministratorListResult.Value">
            <summary> The list of server Active Directory Administrators for the server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent">
            <summary> Represents a server to be created. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.#ctor(Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate,Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of MySqlServerCreateOrUpdateContent. </summary>
            <param name="properties">
            Properties of the server.
            Please note <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore" /> and <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica" />.
            </param>
            <param name="location"> The location the resource resides in. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="properties" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.Identity">
            <summary> The Azure Active Directory identity of the server. Current supported identity types: SystemAssigned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.Sku">
            <summary> The SKU (pricing tier) of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.Properties">
            <summary>
            Properties of the server.
            Please note <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore" /> and <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.Location">
            <summary> The location the resource resides in. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent.Tags">
            <summary> Application-specific metadata in the form of key-value pairs. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyListResult">
            <summary> A list of MySQL Server keys. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyListResult.#ctor">
            <summary> Initializes a new instance of MySqlServerKeyListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlServerKeyData},System.String)">
            <summary> Initializes a new instance of MySqlServerKeyListResult. </summary>
            <param name="value"> A list of MySQL Server keys. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerKeyListResult.Value">
            <summary> A list of MySQL Server keys. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerKeyListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyType">
            <summary> The key type like 'AzureKeyVault'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.AzureKeyVault">
            <summary> AzureKeyVault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.op_Equality(Azure.ResourceManager.MySql.Models.MySqlServerKeyType,Azure.ResourceManager.MySql.Models.MySqlServerKeyType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlServerKeyType,Azure.ResourceManager.MySql.Models.MySqlServerKeyType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlServerKeyType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerKeyType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.Equals(Azure.ResourceManager.MySql.Models.MySqlServerKeyType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerKeyType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerListResult">
            <summary> A list of servers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerListResult.#ctor">
            <summary> Initializes a new instance of MySqlServerListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlServerData})">
            <summary> Initializes a new instance of MySqlServerListResult. </summary>
            <param name="value"> The list of servers. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerListResult.Value">
            <summary> The list of servers. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPatch">
            <summary> Parameters allowed to update for a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPatch.#ctor">
            <summary> Initializes a new instance of MySqlServerPatch. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.Identity">
            <summary> The Azure Active Directory identity of the server. Current supported identity types: SystemAssigned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.Sku">
            <summary> The SKU (pricing tier) of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.Tags">
            <summary> Application-specific metadata in the form of key-value pairs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.StorageProfile">
            <summary> Storage profile of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.AdministratorLoginPassword">
            <summary> The password of the administrator login. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.Version">
            <summary> The version of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.SslEnforcement">
            <summary> Enable ssl enforcement or not when connect to server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.MinimalTlsVersion">
            <summary> Enforce a minimal Tls version for the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.PublicNetworkAccess">
            <summary> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPatch.ReplicationRole">
            <summary> The replication role of the server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection">
            <summary> A private endpoint connection under a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection.#ctor">
            <summary> Initializes a new instance of MySqlServerPrivateEndpointConnection. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection.#ctor(Azure.Core.ResourceIdentifier,Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties)">
            <summary> Initializes a new instance of MySqlServerPrivateEndpointConnection. </summary>
            <param name="id"> Resource Id of the private endpoint connection. </param>
            <param name="properties"> Private endpoint connection properties. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection.Id">
            <summary> Resource Id of the private endpoint connection. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection.Properties">
            <summary> Private endpoint connection properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties">
            <summary> Properties of a private endpoint connection. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.#ctor">
            <summary> Initializes a new instance of MySqlServerPrivateEndpointConnectionProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.#ctor(Azure.ResourceManager.Resources.Models.WritableSubResource,Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointProvisioningState})">
            <summary> Initializes a new instance of MySqlServerPrivateEndpointConnectionProperties. </summary>
            <param name="privateEndpoint"> Private endpoint which the connection belongs to. </param>
            <param name="privateLinkServiceConnectionState"> Connection state of the private endpoint connection. </param>
            <param name="provisioningState"> State of the private endpoint connection. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.PrivateEndpoint">
            <summary> Private endpoint which the connection belongs to. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.PrivateEndpointId">
            <summary> Gets or sets Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.PrivateLinkServiceConnectionState">
            <summary> Connection state of the private endpoint connection. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnectionProperties.ProvisioningState">
            <summary> State of the private endpoint connection. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty">
            <summary> The MySqlServerPrivateLinkServiceConnectionStateProperty. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty.#ctor(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus,System.String)">
            <summary> Initializes a new instance of MySqlServerPrivateLinkServiceConnectionStateProperty. </summary>
            <param name="status"> The private link service connection status. </param>
            <param name="description"> The private link service connection description. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="description" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty.#ctor(Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateStatus,System.String,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateRequiredAction})">
            <summary> Initializes a new instance of MySqlServerPrivateLinkServiceConnectionStateProperty. </summary>
            <param name="status"> The private link service connection status. </param>
            <param name="description"> The private link service connection description. </param>
            <param name="actionsRequired"> The actions required for private link service connection. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty.Status">
            <summary> The private link service connection status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty.Description">
            <summary> The private link service connection description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPrivateLinkServiceConnectionStateProperty.ActionsRequired">
            <summary> The actions required for private link service connection. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate">
            <summary>
            The properties used to create a new server.
            Please note <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore" />, <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore" /> and <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.#ctor">
            <summary> Initializes a new instance of MySqlServerPropertiesForCreate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.Version">
            <summary> Server version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.SslEnforcement">
            <summary> Enable ssl enforcement or not when connect to server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.MinimalTlsVersion">
            <summary> Enforce a minimal Tls version for the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.InfrastructureEncryption">
            <summary> Status showing whether the server enabled infrastructure encryption. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.PublicNetworkAccess">
            <summary> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.StorageProfile">
            <summary> Storage profile of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForCreate.CreateMode">
            <summary> The mode to create a new server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate">
            <summary> The properties used to create a new server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of MySqlServerPropertiesForDefaultCreate. </summary>
            <param name="administratorLogin"> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). The login name is required when updating password. </param>
            <param name="administratorLoginPassword"> The password of the administrator login. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="administratorLogin" /> or <paramref name="administratorLoginPassword" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate.AdministratorLogin">
            <summary> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). The login name is required when updating password. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForDefaultCreate.AdministratorLoginPassword">
            <summary> The password of the administrator login. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore">
            <summary> The properties used to create a new server by restoring to a different region from a geo replicated backup. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of MySqlServerPropertiesForGeoRestore. </summary>
            <param name="sourceServerId"> The source server id to restore from. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceServerId" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForGeoRestore.SourceServerId">
            <summary> The source server id to restore from. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica">
            <summary> The properties to create a new replica. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of MySqlServerPropertiesForReplica. </summary>
            <param name="sourceServerId"> The master server id to create replica from. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceServerId" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForReplica.SourceServerId">
            <summary> The master server id to create replica from. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore">
            <summary> The properties used to create a new server by restoring from a backup. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore.#ctor(Azure.Core.ResourceIdentifier,System.DateTimeOffset)">
            <summary> Initializes a new instance of MySqlServerPropertiesForRestore. </summary>
            <param name="sourceServerId"> The source server id to restore from. </param>
            <param name="restorePointInTime"> Restore point creation time (ISO8601 format), specifying the time to restore from. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceServerId" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore.SourceServerId">
            <summary> The source server id to restore from. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerPropertiesForRestore.RestorePointInTime">
            <summary> Restore point creation time (ISO8601 format), specifying the time to restore from. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyListResult">
            <summary> A list of the server's security alert policies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyListResult.#ctor">
            <summary> Initializes a new instance of MySqlServerSecurityAlertPolicyListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData},System.String)">
            <summary> Initializes a new instance of MySqlServerSecurityAlertPolicyListResult. </summary>
            <param name="value"> Array of results. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyListResult.Value">
            <summary> Array of results. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyState">
            <summary> Specifies the state of the policy, whether it is enabled or disabled. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyState.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerState">
            <summary> A state of a server that is visible to user. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerState.Ready">
            <summary> Ready. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerState.Dropping">
            <summary> Dropping. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerState.Inaccessible">
            <summary> Inaccessible. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.op_Equality(Azure.ResourceManager.MySql.Models.MySqlServerState,Azure.ResourceManager.MySql.Models.MySqlServerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlServerState,Azure.ResourceManager.MySql.Models.MySqlServerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlServerState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlServerState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.Equals(Azure.ResourceManager.MySql.Models.MySqlServerState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent">
            <summary> The MySqlServerUpgradeContent. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent.#ctor">
            <summary> Initializes a new instance of MySqlServerUpgradeContent. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent.TargetServerVersion">
            <summary> Represents an server storage profile. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlSku">
            <summary> Billing information related properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSku.#ctor(System.String)">
            <summary> Initializes a new instance of MySqlSku. </summary>
            <param name="name"> The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSku.#ctor(System.String,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlSkuTier},System.Nullable{System.Int32},System.String,System.String)">
            <summary> Initializes a new instance of MySqlSku. </summary>
            <param name="name"> The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8. </param>
            <param name="tier"> The tier of the particular SKU, e.g. Basic. </param>
            <param name="capacity"> The scale up/out capacity, representing server's compute units. </param>
            <param name="size"> The size code, to be interpreted by resource as appropriate. </param>
            <param name="family"> The family of hardware. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSku.Name">
            <summary> The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSku.Tier">
            <summary> The tier of the particular SKU, e.g. Basic. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSku.Capacity">
            <summary> The scale up/out capacity, representing server's compute units. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSku.Size">
            <summary> The size code, to be interpreted by resource as appropriate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSku.Family">
            <summary> The family of hardware. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlSkuTier">
            <summary> The tier of the particular SKU, e.g. Basic. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSkuTier" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSkuTier.Basic">
            <summary> Basic. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSkuTier.GeneralPurpose">
            <summary> GeneralPurpose. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlSkuTier.MemoryOptimized">
            <summary> MemoryOptimized. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.op_Equality(Azure.ResourceManager.MySql.Models.MySqlSkuTier,Azure.ResourceManager.MySql.Models.MySqlSkuTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSkuTier" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlSkuTier,Azure.ResourceManager.MySql.Models.MySqlSkuTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSkuTier" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlSkuTier">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlSkuTier" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.Equals(Azure.ResourceManager.MySql.Models.MySqlSkuTier)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlSkuTier.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlSslEnforcementEnum">
            <summary> Enable ssl enforcement or not when connect to server. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.Models.MySqlSslEnforcementEnum.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="F:Azure.ResourceManager.MySql.Models.MySqlSslEnforcementEnum.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow">
            <summary> Enable Storage Auto Grow. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.op_Equality(Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow,Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow,Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.Equals(Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlStorageProfile">
            <summary> Storage Profile properties of a server. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.#ctor">
            <summary> Initializes a new instance of MySqlStorageProfile. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.#ctor(System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlGeoRedundantBackup},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlStorageAutogrow})">
            <summary> Initializes a new instance of MySqlStorageProfile. </summary>
            <param name="backupRetentionDays"> Backup retention days for the server. </param>
            <param name="geoRedundantBackup"> Enable Geo-redundant or not for server backup. </param>
            <param name="storageInMB"> Max storage allowed for a server. </param>
            <param name="storageAutogrow"> Enable Storage Auto Grow. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.BackupRetentionDays">
            <summary> Backup retention days for the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.GeoRedundantBackup">
            <summary> Enable Geo-redundant or not for server backup. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.StorageInMB">
            <summary> Max storage allowed for a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlStorageProfile.StorageAutogrow">
            <summary> Enable Storage Auto Grow. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput">
            <summary> Input to get top query statistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary> Initializes a new instance of MySqlTopQueryStatisticsInput. </summary>
            <param name="numberOfTopQueries"> Max number of top queries to return. </param>
            <param name="aggregationFunction"> Aggregation function name. </param>
            <param name="observedMetric"> Observed metric name. </param>
            <param name="observationStartOn"> Observation start time. </param>
            <param name="observationEndOn"> Observation end time. </param>
            <param name="aggregationWindow"> Aggregation interval type in ISO 8601 format. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="aggregationFunction" />, <paramref name="observedMetric" /> or <paramref name="aggregationWindow" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.NumberOfTopQueries">
            <summary> Max number of top queries to return. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.AggregationFunction">
            <summary> Aggregation function name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.ObservedMetric">
            <summary> Observed metric name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.ObservationStartOn">
            <summary> Observation start time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.ObservationEndOn">
            <summary> Observation end time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput.AggregationWindow">
            <summary> Aggregation interval type in ISO 8601 format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsListResult">
            <summary> A list of query statistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsListResult.#ctor">
            <summary> Initializes a new instance of MySqlTopQueryStatisticsListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlQueryStatisticData},System.String)">
            <summary> Initializes a new instance of MySqlTopQueryStatisticsListResult. </summary>
            <param name="value"> The list of top query statistics. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsListResult.Value">
            <summary> The list of top query statistics. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleListResult">
            <summary> A list of virtual network rules. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleListResult.#ctor">
            <summary> Initializes a new instance of MySqlVirtualNetworkRuleListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData},System.String)">
            <summary> Initializes a new instance of MySqlVirtualNetworkRuleListResult. </summary>
            <param name="value"> Array of results. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleListResult.Value">
            <summary> Array of results. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState">
            <summary> Virtual Network Rule State. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Initializing">
            <summary> Initializing. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.InProgress">
            <summary> InProgress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Ready">
            <summary> Ready. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Deleting">
            <summary> Deleting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Unknown">
            <summary> Unknown. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.op_Equality(Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState,Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.op_Inequality(Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState,Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.op_Implicit(System.String)~Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.Equals(Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput">
            <summary> Input to get wait statistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput.#ctor(System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary> Initializes a new instance of MySqlWaitStatisticsInput. </summary>
            <param name="observationStartOn"> Observation start time. </param>
            <param name="observationEndOn"> Observation end time. </param>
            <param name="aggregationWindow"> Aggregation interval type in ISO 8601 format. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="aggregationWindow" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput.ObservationStartOn">
            <summary> Observation start time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput.ObservationEndOn">
            <summary> Observation end time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput.AggregationWindow">
            <summary> Aggregation interval type in ISO 8601 format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsListResult">
            <summary> A list of wait statistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsListResult.#ctor">
            <summary> Initializes a new instance of MySqlWaitStatisticsListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.MySqlWaitStatisticData},System.String)">
            <summary> Initializes a new instance of MySqlWaitStatisticsListResult. </summary>
            <param name="value"> The list of wait statistics. </param>
            <param name="nextLink"> Link to retrieve next page of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsListResult.Value">
            <summary> The list of wait statistics. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsListResult.NextLink">
            <summary> Link to retrieve next page of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerData">
            <summary> A class representing the MySqlServer data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of MySqlServerData. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.MySql.Models.MySqlSku,System.String,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlServerVersion},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlSslEnforcementEnum},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlMinimalTlsVersionEnum},System.String,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlInfrastructureEncryption},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlServerState},System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.MySql.Models.MySqlStorageProfile,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlPublicNetworkAccessEnum},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.MySql.Models.MySqlServerPrivateEndpointConnection})">
            <summary> Initializes a new instance of MySqlServerData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="identity"> The Azure Active Directory identity of the server. Current supported identity types: SystemAssigned. </param>
            <param name="sku"> The SKU (pricing tier) of the server. </param>
            <param name="administratorLogin"> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). </param>
            <param name="version"> Server version. </param>
            <param name="sslEnforcement"> Enable ssl enforcement or not when connect to server. </param>
            <param name="minimalTlsVersion"> Enforce a minimal Tls version for the server. </param>
            <param name="byokEnforcement"> Status showing whether the server data encryption is enabled with customer-managed keys. </param>
            <param name="infrastructureEncryption"> Status showing whether the server enabled infrastructure encryption. </param>
            <param name="userVisibleState"> A state of a server that is visible to user. </param>
            <param name="fullyQualifiedDomainName"> The fully qualified domain name of a server. </param>
            <param name="earliestRestoreOn"> Earliest restore point creation time (ISO8601 format). </param>
            <param name="storageProfile"> Storage profile of a server. </param>
            <param name="replicationRole"> The replication role of the server. </param>
            <param name="masterServerId"> The master server id of a replica server. </param>
            <param name="replicaCapacity"> The maximum number of replicas that a master server can have. </param>
            <param name="publicNetworkAccess"> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="privateEndpointConnections"> List of private endpoint connections on a server. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.Identity">
            <summary> The Azure Active Directory identity of the server. Current supported identity types: SystemAssigned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.Sku">
            <summary> The SKU (pricing tier) of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.AdministratorLogin">
            <summary> The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.Version">
            <summary> Server version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.SslEnforcement">
            <summary> Enable ssl enforcement or not when connect to server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.MinimalTlsVersion">
            <summary> Enforce a minimal Tls version for the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.ByokEnforcement">
            <summary> Status showing whether the server data encryption is enabled with customer-managed keys. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.InfrastructureEncryption">
            <summary> Status showing whether the server enabled infrastructure encryption. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.UserVisibleState">
            <summary> A state of a server that is visible to user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.FullyQualifiedDomainName">
            <summary> The fully qualified domain name of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.EarliestRestoreOn">
            <summary> Earliest restore point creation time (ISO8601 format). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.StorageProfile">
            <summary> Storage profile of a server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.ReplicationRole">
            <summary> The replication role of the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.MasterServerId">
            <summary> The master server id of a replica server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.ReplicaCapacity">
            <summary> The maximum number of replicas that a master server can have. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.PublicNetworkAccess">
            <summary> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerData.PrivateEndpointConnections">
            <summary> List of private endpoint connections on a server. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.MySql. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServers(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetLocationBasedPerformanceTiersAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetLocationBasedPerformanceTiers(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.CheckMySqlNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.CheckMySqlNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServers(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of MySqlServerResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of MySqlServerResources and their operations over a MySqlServerResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServer(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlFirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlVirtualNetworkRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServerAdministratorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServerSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlQueryTextResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlQueryStatisticResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlWaitStatisticResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlAdvisorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlRecommendationActionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlExtensions.GetMySqlServerKeyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ResourceGroupResourceExtensionClient.GetMySqlServers">
            <summary> Gets a collection of MySqlServerResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of MySqlServerResources and their operations over a MySqlServerResource. </returns>
        </member>
        <member name="T:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.GetMySqlServersAsync(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.GetMySqlServers(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.GetLocationBasedPerformanceTiersAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.GetLocationBasedPerformanceTiers(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocationBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.CheckMySqlNameAvailabilityAsync(Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.SubscriptionResourceExtensionClient.CheckMySqlNameAvailability(Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Check the availability of name for resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CheckNameAvailability_Execute</description>
            </item>
            </list>
            </summary>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.#ctor">
            <summary> Initializes a new instance of MySqlArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.#ctor">
            <summary> Initializes a new instance of MySqlArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlAdvisorData">
            <summary> A class representing the MySqlAdvisor data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorData.#ctor">
            <summary> Initializes a new instance of MySqlAdvisorData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.BinaryData)">
            <summary> Initializes a new instance of MySqlAdvisorData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The properties of a recommendation action advisor. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlAdvisorData.Properties">
            <summary>
            The properties of a recommendation action advisor.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlConfigurationData">
            <summary> A class representing the MySqlConfiguration data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationData.#ctor">
            <summary> Initializes a new instance of MySqlConfigurationData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of MySqlConfigurationData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="value"> Value of the configuration. </param>
            <param name="description"> Description of the configuration. </param>
            <param name="defaultValue"> Default value of the configuration. </param>
            <param name="dataType"> Data type of the configuration. </param>
            <param name="allowedValues"> Allowed values of the configuration. </param>
            <param name="source"> Source of the configuration. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.Value">
            <summary> Value of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.Description">
            <summary> Description of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.DefaultValue">
            <summary> Default value of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.DataType">
            <summary> Data type of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.AllowedValues">
            <summary> Allowed values of the configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationData.Source">
            <summary> Source of the configuration. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlDatabaseData">
            <summary> A class representing the MySqlDatabase data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseData.#ctor">
            <summary> Initializes a new instance of MySqlDatabaseData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String)">
            <summary> Initializes a new instance of MySqlDatabaseData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="charset"> The charset of the database. </param>
            <param name="collation"> The collation of the database. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlDatabaseData.Charset">
            <summary> The charset of the database. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlDatabaseData.Collation">
            <summary> The collation of the database. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlFirewallRuleData">
            <summary> A class representing the MySqlFirewallRule data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleData.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary> Initializes a new instance of MySqlFirewallRuleData. </summary>
            <param name="startIPAddress"> The start IP address of the server firewall rule. Must be IPv4 format. </param>
            <param name="endIPAddress"> The end IP address of the server firewall rule. Must be IPv4 format. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="startIPAddress" /> or <paramref name="endIPAddress" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Net.IPAddress,System.Net.IPAddress)">
            <summary> Initializes a new instance of MySqlFirewallRuleData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="startIPAddress"> The start IP address of the server firewall rule. Must be IPv4 format. </param>
            <param name="endIPAddress"> The end IP address of the server firewall rule. Must be IPv4 format. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlFirewallRuleData.StartIPAddress">
            <summary> The start IP address of the server firewall rule. Must be IPv4 format. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlFirewallRuleData.EndIPAddress">
            <summary> The end IP address of the server firewall rule. Must be IPv4 format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData">
            <summary> A class representing the MySqlPrivateEndpointConnection data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.#ctor">
            <summary> Initializes a new instance of MySqlPrivateEndpointConnectionData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.WritableSubResource,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkServiceConnectionStateProperty,System.String)">
            <summary> Initializes a new instance of MySqlPrivateEndpointConnectionData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="privateEndpoint"> Private endpoint which the connection belongs to. </param>
            <param name="connectionState"> Connection state of the private endpoint connection. </param>
            <param name="provisioningState"> State of the private endpoint connection. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.PrivateEndpoint">
            <summary> Private endpoint which the connection belongs to. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.PrivateEndpointId">
            <summary> Gets or sets Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.ConnectionState">
            <summary> Connection state of the private endpoint connection. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData.ProvisioningState">
            <summary> State of the private endpoint connection. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData">
            <summary> A class representing the MySqlPrivateLinkResource data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData.#ctor">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.MySql.Models.MySqlPrivateLinkResourceProperties)">
            <summary> Initializes a new instance of MySqlPrivateLinkResourceData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The private link resource group id. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData.Properties">
            <summary> The private link resource group id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryStatisticData">
            <summary> A class representing the MySqlQueryStatistic data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticData.#ctor">
            <summary> Initializes a new instance of MySqlQueryStatisticData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Double},System.String)">
            <summary> Initializes a new instance of MySqlQueryStatisticData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="queryId"> Database query identifier. </param>
            <param name="startOn"> Observation start time. </param>
            <param name="endOn"> Observation end time. </param>
            <param name="aggregationFunction"> Aggregation function name. </param>
            <param name="databaseNames"> The list of database names. </param>
            <param name="queryExecutionCount"> Number of query executions in this time interval. </param>
            <param name="metricName"> Metric name. </param>
            <param name="metricDisplayName"> Metric display name. </param>
            <param name="metricValue"> Metric value. </param>
            <param name="metricValueUnit"> Metric value unit. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.QueryId">
            <summary> Database query identifier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.StartOn">
            <summary> Observation start time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.EndOn">
            <summary> Observation end time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.AggregationFunction">
            <summary> Aggregation function name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.DatabaseNames">
            <summary> The list of database names. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.QueryExecutionCount">
            <summary> Number of query executions in this time interval. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.MetricName">
            <summary> Metric name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.MetricDisplayName">
            <summary> Metric display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.MetricValue">
            <summary> Metric value. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticData.MetricValueUnit">
            <summary> Metric value unit. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryTextData">
            <summary> A class representing the MySqlQueryText data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextData.#ctor">
            <summary> Initializes a new instance of MySqlQueryTextData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String)">
            <summary> Initializes a new instance of MySqlQueryTextData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="queryId"> Query identifier unique to the server. </param>
            <param name="queryText"> Query text. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryTextData.QueryId">
            <summary> Query identifier unique to the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryTextData.QueryText">
            <summary> Query text. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlRecommendationActionData">
            <summary> A class representing the MySqlRecommendationAction data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionData.#ctor">
            <summary> Initializes a new instance of MySqlRecommendationActionData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary> Initializes a new instance of MySqlRecommendationActionData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="advisorName"> Advisor name. </param>
            <param name="sessionId"> Recommendation action session identifier. </param>
            <param name="actionId"> Recommendation action identifier. </param>
            <param name="createdOn"> Recommendation action creation time. </param>
            <param name="expireOn"> Recommendation action expiration time. </param>
            <param name="reason"> Recommendation action reason. </param>
            <param name="recommendationType"> Recommendation action type. </param>
            <param name="details"> Recommendation action details. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.AdvisorName">
            <summary> Advisor name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.SessionId">
            <summary> Recommendation action session identifier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.ActionId">
            <summary> Recommendation action identifier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.CreatedOn">
            <summary> Recommendation action creation time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.ExpireOn">
            <summary> Recommendation action expiration time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.Reason">
            <summary> Recommendation action reason. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.RecommendationType">
            <summary> Recommendation action type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionData.Details">
            <summary> Recommendation action details. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerAdministratorData">
            <summary> A class representing the MySqlServerAdministrator data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorData.#ctor">
            <summary> Initializes a new instance of MySqlServerAdministratorData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlAdministratorType},System.String,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary> Initializes a new instance of MySqlServerAdministratorData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="administratorType"> The type of administrator. </param>
            <param name="loginAccountName"> The server administrator login account name. </param>
            <param name="secureId"> The server administrator Sid (Secure ID). </param>
            <param name="tenantId"> The server Active Directory Administrator tenant id. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorData.AdministratorType">
            <summary> The type of administrator. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorData.LoginAccountName">
            <summary> The server administrator login account name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorData.SecureId">
            <summary> The server administrator Sid (Secure ID). </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorData.TenantId">
            <summary> The server Active Directory Administrator tenant id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerKeyData">
            <summary> A class representing the MySqlServerKey data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyData.#ctor">
            <summary> Initializes a new instance of MySqlServerKeyData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlServerKeyType},System.Uri,System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of MySqlServerKeyData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="kind"> Kind of encryption protector used to protect the key. </param>
            <param name="serverKeyType"> The key type like 'AzureKeyVault'. </param>
            <param name="uri"> The URI of the key. </param>
            <param name="createdOn"> The key creation date. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyData.Kind">
            <summary> Kind of encryption protector used to protect the key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyData.ServerKeyType">
            <summary> The key type like 'AzureKeyVault'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyData.Uri">
            <summary> The URI of the key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyData.CreatedOn">
            <summary> The key creation date. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData">
            <summary> A class representing the MySqlServerSecurityAlertPolicy data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.#ctor">
            <summary> Initializes a new instance of MySqlServerSecurityAlertPolicyData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.MySql.Models.MySqlServerSecurityAlertPolicyState},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of MySqlServerSecurityAlertPolicyData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="state"> Specifies the state of the policy, whether it is enabled or disabled. </param>
            <param name="disabledAlerts"> Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly. </param>
            <param name="emailAddresses"> Specifies an array of e-mail addresses to which the alert is sent. </param>
            <param name="sendToEmailAccountAdmins"> Specifies that the alert is sent to the account administrators. </param>
            <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. </param>
            <param name="storageAccountAccessKey"> Specifies the identifier key of the Threat Detection audit storage account. </param>
            <param name="retentionDays"> Specifies the number of days to keep in the Threat Detection audit logs. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.State">
            <summary> Specifies the state of the policy, whether it is enabled or disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.DisabledAlerts">
            <summary> Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.EmailAddresses">
            <summary> Specifies an array of e-mail addresses to which the alert is sent. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.SendToEmailAccountAdmins">
            <summary> Specifies that the alert is sent to the account administrators. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.StorageEndpoint">
            <summary> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.StorageAccountAccessKey">
            <summary> Specifies the identifier key of the Threat Detection audit storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData.RetentionDays">
            <summary> Specifies the number of days to keep in the Threat Detection audit logs. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData">
            <summary> A class representing the MySqlVirtualNetworkRule data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData.#ctor">
            <summary> Initializes a new instance of MySqlVirtualNetworkRuleData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.MySql.Models.MySqlVirtualNetworkRuleState})">
            <summary> Initializes a new instance of MySqlVirtualNetworkRuleData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="virtualNetworkSubnetId"> The ARM resource id of the virtual network subnet. </param>
            <param name="ignoreMissingVnetServiceEndpoint"> Create firewall rule before the virtual network has vnet service endpoint enabled. </param>
            <param name="state"> Virtual Network Rule State. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData.VirtualNetworkSubnetId">
            <summary> The ARM resource id of the virtual network subnet. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData.IgnoreMissingVnetServiceEndpoint">
            <summary> Create firewall rule before the virtual network has vnet service endpoint enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData.State">
            <summary> Virtual Network Rule State. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlWaitStatisticData">
            <summary> A class representing the MySqlWaitStatistic data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticData.#ctor">
            <summary> Initializes a new instance of MySqlWaitStatisticData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Double})">
            <summary> Initializes a new instance of MySqlWaitStatisticData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="startOn"> Observation start time. </param>
            <param name="endOn"> Observation end time. </param>
            <param name="eventName"> Wait event name. </param>
            <param name="eventTypeName"> Wait event type name. </param>
            <param name="queryId"> Database query identifier. </param>
            <param name="databaseName"> Database Name. </param>
            <param name="userId"> Database user identifier. </param>
            <param name="count"> Wait event count observed in this time interval. </param>
            <param name="totalTimeInMinutes"> Total time of wait in milliseconds in this time interval. </param>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.StartOn">
            <summary> Observation start time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.EndOn">
            <summary> Observation end time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.EventName">
            <summary> Wait event name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.EventTypeName">
            <summary> Wait event type name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.QueryId">
            <summary> Database query identifier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.DatabaseName">
            <summary> Database Name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.UserId">
            <summary> Database user identifier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.Count">
            <summary> Wait event count observed in this time interval. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticData.TotalTimeInMinutes">
            <summary> Total time of wait in milliseconds in this time interval. </summary>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlAdvisorCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorCollection" /> instance call the GetMySqlAdvisors method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List recommendation action advisors.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List recommendation action advisors.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlAdvisorResource">
            <summary>
            A Class representing a MySqlAdvisor along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlAdvisorResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlAdvisor method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlAdvisorData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlAdvisorResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlAdvisorResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlAdvisorResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.GetMySqlRecommendationActions">
            <summary> Gets a collection of MySqlRecommendationActionResources in the MySqlAdvisor. </summary>
            <returns> An object representing collection of MySqlRecommendationActionResources and their operations over a MySqlRecommendationActionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.GetMySqlRecommendationActionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.GetMySqlRecommendationAction(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.CreateRecommendedActionSessionAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Create recommendation action session for the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/createRecommendedActionSession</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CreateRecommendedActionSession</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorResource.CreateRecommendedActionSession(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Create recommendation action session for the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/createRecommendedActionSession</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>CreateRecommendedActionSession</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlConfigurationCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationCollection" /> instance call the GetMySqlConfigurations method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlConfigurationResource">
            <summary>
            A Class representing a MySqlConfiguration along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlConfigurationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlConfiguration method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlConfigurationData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlConfigurationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlConfigurationResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlConfigurationResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary>
            Updates a configuration of a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlDatabaseCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseCollection" /> instance call the GetMySqlDatabases method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the databases in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the databases in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlDatabaseResource">
            <summary>
            A Class representing a MySqlDatabase along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlDatabaseResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlDatabase method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlDatabaseData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlDatabaseResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlDatabaseResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlDatabaseResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlDatabaseResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary>
            Creates a new database or updates an existing database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection" /> instance call the GetMySqlFirewallRules method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the firewall rules in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the firewall rules in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource">
            <summary>
            A Class representing a MySqlFirewallRule along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlFirewallRuleResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlFirewallRule method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlFirewallRuleData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlFirewallRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates a new firewall rule or updates an existing firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection" /> instance call the GetMySqlPrivateEndpointConnections method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Approve or reject a private endpoint connection with a given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="data"> The MySqlPrivateEndpointConnection to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Approve or reject a private endpoint connection with a given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="data"> The MySqlPrivateEndpointConnection to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all private endpoint connections on a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets all private endpoint connections on a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource">
            <summary>
            A Class representing a MySqlPrivateEndpointConnection along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlPrivateEndpointConnectionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlPrivateEndpointConnection method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a private endpoint connection with a given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a private endpoint connection with a given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch,System.Threading.CancellationToken)">
            <summary>
            Updates private endpoint connection with the specified tags.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_UpdateTags</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> Parameters supplied to the Update private endpoint connection Tags operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch,System.Threading.CancellationToken)">
            <summary>
            Updates private endpoint connection with the specified tags.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_UpdateTags</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> Parameters supplied to the Update private endpoint connection Tags operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource">
            <summary>
            A Class representing a MySqlPrivateLinkResource along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlPrivateLinkResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlPrivateLinkResource method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlPrivateLinkResourceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection" /> instance call the GetMySqlPrivateLinkResources method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection" /> instance call the GetMySqlQueryStatistics method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.GetAllAsync(Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store top queries for specified metric and aggregation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.GetAll(Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store top queries for specified metric and aggregation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource">
            <summary>
            A Class representing a MySqlQueryStatistic along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlQueryStatisticResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlQueryStatistic method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlQueryStatisticData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryStatisticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryStatisticResource.Get(System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryTextCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextCollection" /> instance call the GetMySqlQueryTexts method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.GetAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for specified queryIds.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryIds" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.GetAll(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for specified queryIds.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryIds" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlQueryTextResource">
            <summary>
            A Class representing a MySqlQueryText along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlQueryTextResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlQueryText method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlQueryTextData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlQueryTextResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlQueryTextResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryTextResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlQueryTextResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlQueryTextResource.Get(System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection" /> instance call the GetMySqlRecommendationActions method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recommendedActionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource">
            <summary>
            A Class representing a MySqlRecommendationAction along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlRecommendationActionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlAdvisorResource" /> using the GetMySqlRecommendationAction method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlRecommendationActionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlRecommendationActionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Retrieve recommended actions from the advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecommendedActions_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource">
            <summary>
            A Class representing a MySqlServerAdministrator along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlServerAdministratorResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlServerAdministrator method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlServerAdministratorData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a AAD server administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a AAD server administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes server active directory administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes server active directory administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerAdministratorData,System.Threading.CancellationToken)">
            <summary>
            Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating an AAD server administrator. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerAdministratorResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerAdministratorData,System.Threading.CancellationToken)">
            <summary>
            Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/administrators/activeDirectory</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerAdministrators_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The required parameters for creating or updating an AAD server administrator. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlServerCollection" /> instance call the GetMySqlServers method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Creates a new server or updates an existing server. The update action will overwrite the existing server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Create</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Creates a new server or updates an existing server. The update action will overwrite the existing server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Create</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_ListByResourceGroup</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the servers in a given resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_ListByResourceGroup</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.GetReplicasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the replicas for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/replicas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Replicas_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.GetReplicas(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the replicas for a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/replicas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Replicas_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serverName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerKeyCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyCollection" /> instance call the GetMySqlServerKeys method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="keyName"> The name of the MySQL Server key to be operated on (updated or created). </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="keyName"> The name of the MySQL Server key to be operated on (updated or created). </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of  Server keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets a list of  Server keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerKeyResource">
            <summary>
            A Class representing a MySqlServerKey along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlServerKeyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlServerKey method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlServerKeyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerKeyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlServerKeyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerKeyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the MySQL Server key with the given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the MySQL Server key with the given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerResource">
            <summary>
            A Class representing a MySqlServer along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlServerResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetMySqlServer method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlServerData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlServerResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlFirewallRules">
            <summary> Gets a collection of MySqlFirewallRuleResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlFirewallRuleResources and their operations over a MySqlFirewallRuleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlFirewallRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlFirewallRule(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a server firewall rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FirewallRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="firewallRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlVirtualNetworkRules">
            <summary> Gets a collection of MySqlVirtualNetworkRuleResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlVirtualNetworkRuleResources and their operations over a MySqlVirtualNetworkRuleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlVirtualNetworkRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlVirtualNetworkRule(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlDatabases">
            <summary> Gets a collection of MySqlDatabaseResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlDatabaseResources and their operations over a MySqlDatabaseResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlDatabase(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Databases_Get</description>
            </item>
            </list>
            </summary>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="databaseName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlConfigurations">
            <summary> Gets a collection of MySqlConfigurationResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlConfigurationResources and their operations over a MySqlConfigurationResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlConfigurationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlConfiguration(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a configuration of server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Configurations_Get</description>
            </item>
            </list>
            </summary>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerAdministrator">
            <summary> Gets an object representing a MySqlServerAdministratorResource along with the instance operations that can be performed on it in the MySqlServer. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.MySql.MySqlServerAdministratorResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerSecurityAlertPolicies">
            <summary> Gets a collection of MySqlServerSecurityAlertPolicyResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlServerSecurityAlertPolicyResources and their operations over a MySqlServerSecurityAlertPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerSecurityAlertPolicyAsync(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerSecurityAlertPolicy(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryTexts">
            <summary> Gets a collection of MySqlQueryTextResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlQueryTextResources and their operations over a MySqlQueryTextResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryTextAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryText(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the Query-Store query texts for the queryId.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/queryTexts/{queryId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueryTexts_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryStatistics">
            <summary> Gets a collection of MySqlQueryStatisticResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlQueryStatisticResources and their operations over a MySqlQueryStatisticResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryStatisticAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlQueryStatistic(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the query statistic for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/topQueryStatistics/{queryStatisticId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TopQueryStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queryStatisticId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlWaitStatistics">
            <summary> Gets a collection of MySqlWaitStatisticResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlWaitStatisticResources and their operations over a MySqlWaitStatisticResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlWaitStatisticAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlWaitStatistic(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlAdvisors">
            <summary> Gets a collection of MySqlAdvisorResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlAdvisorResources and their operations over a MySqlAdvisorResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlAdvisorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlAdvisor(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a recommendation action advisor.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/advisors/{advisorName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Advisors_Get</description>
            </item>
            </list>
            </summary>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="advisorName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateEndpointConnections">
            <summary> Gets a collection of MySqlPrivateEndpointConnectionResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlPrivateEndpointConnectionResources and their operations over a MySqlPrivateEndpointConnectionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateEndpointConnection(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private endpoint connection.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateLinkResources">
            <summary> Gets a collection of MySqlPrivateLinkResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlPrivateLinkResources and their operations over a MySqlPrivateLinkResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlPrivateLinkResource(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a private link resource for MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_Get</description>
            </item>
            </list>
            </summary>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerKeys">
            <summary> Gets a collection of MySqlServerKeyResources in the MySqlServer. </summary>
            <returns> An object representing collection of MySqlServerKeyResources and their operations over a MySqlServerKeyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetMySqlServerKey(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a MySQL Server key.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/keys/{keyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerKeys_Get</description>
            </item>
            </list>
            </summary>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets information about a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlServerPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlServerPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Update</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.RestartAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Restarts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/restart</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Restart</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Restart(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Restarts a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/restart</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Restart</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.UpdateConfigurationsAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlConfigurations,System.Threading.CancellationToken)">
            <summary>
            Update a list of configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/updateConfigurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerParameters_ListUpdateConfigurations</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="value"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.UpdateConfigurations(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlConfigurations,System.Threading.CancellationToken)">
            <summary>
            Update a list of configurations in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/updateConfigurations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerParameters_ListUpdateConfigurations</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="value"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetLogFilesAsync(System.Threading.CancellationToken)">
            <summary>
            List all the log files in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/logFiles</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LogFiles_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlLogFile" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetLogFiles(System.Threading.CancellationToken)">
            <summary>
            List all the log files in a given server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/logFiles</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LogFiles_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlLogFile" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetRecoverableServerAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a recoverable MySQL Server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/recoverableServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecoverableServers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetRecoverableServer(System.Threading.CancellationToken)">
            <summary>
            Gets a recoverable MySQL Server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/recoverableServers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RecoverableServers_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetServerBasedPerformanceTiersAsync(System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers for a MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.GetServerBasedPerformanceTiers(System.Threading.CancellationToken)">
            <summary>
            List all the performance tiers for a MySQL server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/performanceTiers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerBasedPerformanceTier_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.Models.MySqlPerformanceTier" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.ResetQueryPerformanceInsightDataAsync(System.Threading.CancellationToken)">
            <summary>
            Reset data for Query Performance Insight.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/resetQueryPerformanceInsightData</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ResetQueryPerformanceInsightData</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.ResetQueryPerformanceInsightData(System.Threading.CancellationToken)">
            <summary>
            Reset data for Query Performance Insight.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/resetQueryPerformanceInsightData</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ResetQueryPerformanceInsightData</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.StartAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Starts a stopped server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/start</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Start</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Start(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Starts a stopped server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/start</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Start</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.StopAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Stops a running server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/stop</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Stop</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Stop(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Stops a running server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/stop</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Stop</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.UpgradeAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent,System.Threading.CancellationToken)">
            <summary>
            Upgrade server version.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/upgrade</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Upgrade</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.Upgrade(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent,System.Threading.CancellationToken)">
            <summary>
            Upgrade server version.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/upgrade</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>MySqlServers_Upgrade</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Servers_Get</description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection" /> instance call the GetMySqlServerSecurityAlertPolicies method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a threat detection policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="securityAlertPolicyName"> The name of the threat detection policy. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a threat detection policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="securityAlertPolicyName"> The name of the threat detection policy. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.GetAsync(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.Get(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server's threat detection policies.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Get the server's threat detection policies.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.ExistsAsync(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.Exists(Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource">
            <summary>
            A Class representing a MySqlServerSecurityAlertPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlServerSecurityAlertPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlServerSecurityAlertPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a server's security alert policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a threat detection policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a threat detection policy.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ServerSecurityAlertPolicies_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection" /> instance call the GetMySqlVirtualNetworkRules method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an existing virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an existing virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of virtual network rules in a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets a list of virtual network rules in a server.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkRuleName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource">
            <summary>
            A Class representing a MySqlVirtualNetworkRule along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlVirtualNetworkRuleResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlVirtualNetworkRule method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the virtual network rule with the given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the virtual network rule with the given name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_Delete</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an existing virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleResource.Update(Azure.WaitUntil,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an existing virtual network rule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>VirtualNetworkRules_CreateOrUpdate</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            To get a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection" /> instance call the GetMySqlWaitStatistics method from an instance of <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.GetAllAsync(Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified aggregation window.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.GetAll(Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified aggregation window.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_ListByServer</description>
            </item>
            </list>
            </summary>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="waitStatisticsId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource">
            <summary>
            A Class representing a MySqlWaitStatistic along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetMySqlWaitStatisticResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.MySql.MySqlServerResource" /> using the GetMySqlWaitStatistic method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.MySql.MySqlWaitStatisticData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.MySqlWaitStatisticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlWaitStatisticResource.Get(System.Threading.CancellationToken)">
            <summary>
            Retrieve wait statistics for specified identifier.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/waitStatistics/{waitStatisticsId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WaitStatistics_Get</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of AdvisorsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a recommendation action advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a recommendation action advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List recommendation action advisors. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List recommendation action advisors. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List recommendation action advisors. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.AdvisorsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List recommendation action advisors. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.CheckNameAvailabilityRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of CheckNameAvailabilityRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.CheckNameAvailabilityRestOperations.ExecuteAsync(System.String,Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Check the availability of name for resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.CheckNameAvailabilityRestOperations.Execute(System.String,Azure.ResourceManager.MySql.Models.MySqlNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Check the availability of name for resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="content"> The required parameters for checking if resource name is available. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ConfigurationsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary> Updates a configuration of a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlConfigurationData,System.Threading.CancellationToken)">
            <summary> Updates a configuration of a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="data"> The required parameters for updating a server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="configurationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a configuration of server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a configuration of server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="configurationName"> The name of the server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ConfigurationsRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DatabasesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary> Creates a new database or updates an existing database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlDatabaseData,System.Threading.CancellationToken)">
            <summary> Creates a new database or updates an existing database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="data"> The required parameters for creating or updating a database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a database. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.DatabasesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the databases in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of FirewallRulesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary> Creates a new firewall rule or updates an existing firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlFirewallRuleData,System.Threading.CancellationToken)">
            <summary> Creates a new firewall rule or updates an existing firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="data"> The required parameters for creating or updating a firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="firewallRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server firewall rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="firewallRuleName"> The name of the server firewall rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FirewallRulesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the firewall rules in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LocationBasedPerformanceTierRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of LocationBasedPerformanceTierRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LocationBasedPerformanceTierRestOperations.ListAsync(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> List all the performance tiers at specified location in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LocationBasedPerformanceTierRestOperations.List(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> List all the performance tiers at specified location in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="locationName"> The name of the location. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LogFilesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of LogFilesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LogFilesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the log files in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.LogFilesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the log files in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySQLManagementRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of MySQLManagementRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySQLManagementRestOperations.ResetQueryPerformanceInsightDataAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Reset data for Query Performance Insight. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySQLManagementRestOperations.ResetQueryPerformanceInsightData(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Reset data for Query Performance Insight. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySQLManagementRestOperations.CreateRecommendedActionSessionAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Create recommendation action session for the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySQLManagementRestOperations.CreateRecommendedActionSession(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Create recommendation action session for the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="databaseName"> The name of the database. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="databaseName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of MySqlServersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.StartAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Starts a stopped server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.Start(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Starts a stopped server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.StopAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stops a running server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.Stop(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stops a running server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.UpgradeAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent,System.Threading.CancellationToken)">
            <summary> Upgrade server version. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServersRestOperations.Upgrade(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerUpgradeContent,System.Threading.CancellationToken)">
            <summary> Upgrade server version. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of PrivateEndpointConnectionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a private endpoint connection. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a private endpoint connection. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary> Approve or reject a private endpoint connection with a given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="data"> The MySqlPrivateEndpointConnection to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary> Approve or reject a private endpoint connection with a given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="data"> The MySqlPrivateEndpointConnection to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a private endpoint connection with a given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a private endpoint connection with a given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.UpdateTagsAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch,System.Threading.CancellationToken)">
            <summary> Updates private endpoint connection with the specified tags. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="patch"> Parameters supplied to the Update private endpoint connection Tags operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.UpdateTags(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlPrivateEndpointConnectionPatch,System.Threading.CancellationToken)">
            <summary> Updates private endpoint connection with the specified tags. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="privateEndpointConnectionName"> The String to use. </param>
            <param name="patch"> Parameters supplied to the Update private endpoint connection Tags operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all private endpoint connections on a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all private endpoint connections on a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all private endpoint connections on a server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateEndpointConnectionsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all private endpoint connections on a server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of PrivateLinkResourcesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources for MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources for MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a private link resource for MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="groupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a private link resource for MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="groupName"> The name of the private link resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="groupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources for MySQL server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.PrivateLinkResourcesRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources for MySQL server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of QueryTextsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for the queryId. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for the queryId. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryId"> The Query-Store query identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for specified queryIds. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryIds" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.ListByServer(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for specified queryIds. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryIds" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for specified queryIds. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryIds" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.QueryTextsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store query texts for specified queryIds. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryIds"> The query identifiers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryIds" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RecommendedActionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="recommendedActionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="recommendedActionName"> The recommended action name. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="recommendedActionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="advisorName" /> or <paramref name="recommendedActionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.ListByServerAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.ListByServer(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecommendedActionsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve recommended actions from the advisor. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="advisorName"> The advisor name for recommendation action. </param>
            <param name="sessionId"> The recommendation action session identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecoverableServersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RecoverableServersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecoverableServersRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a recoverable MySQL Server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.RecoverableServersRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a recoverable MySQL Server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ReplicasRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ReplicasRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ReplicasRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ReplicasRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the replicas for a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServerAdministratorsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a AAD server administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a AAD server administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlServerAdministratorData,System.Threading.CancellationToken)">
            <summary> Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating an AAD server administrator. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlServerAdministratorData,System.Threading.CancellationToken)">
            <summary> Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="data"> The required parameters for creating or updating an AAD server administrator. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes server active directory administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes server active directory administrator. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a list of server Administrators. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerAdministratorsRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a list of server Administrators. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerBasedPerformanceTierRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServerBasedPerformanceTierRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerBasedPerformanceTierRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the performance tiers for a MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerBasedPerformanceTierRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the performance tiers for a MySQL server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServerKeysRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of  Server keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of  Server keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a MySQL Server key. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a MySQL Server key. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be retrieved. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary> Creates or updates a MySQL Server key. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be operated on (updated or created). </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="keyName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlServerKeyData,System.Threading.CancellationToken)">
            <summary> Creates or updates a MySQL Server key. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be operated on (updated or created). </param>
            <param name="data"> The requested MySQL Server key resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="keyName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the MySQL Server key with the given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be deleted. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the MySQL Server key with the given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="keyName"> The name of the MySQL Server key to be deleted. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of  Server keys. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerKeysRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of  Server keys. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerParametersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServerParametersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerParametersRestOperations.ListUpdateConfigurationsAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlConfigurations,System.Threading.CancellationToken)">
            <summary> Update a list of configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="value"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="value" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerParametersRestOperations.ListUpdateConfigurations(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlConfigurations,System.Threading.CancellationToken)">
            <summary> Update a list of configurations in a given server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="value"> The parameters for updating a list of server configuration. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="value" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServerSecurityAlertPoliciesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.GetAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary> Get a server's security alert policy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.Get(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,System.Threading.CancellationToken)">
            <summary> Get a server's security alert policy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary> Creates or updates a threat detection policy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="securityAlertPolicyName"> The name of the threat detection policy. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlSecurityAlertPolicyName,Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyData,System.Threading.CancellationToken)">
            <summary> Creates or updates a threat detection policy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="securityAlertPolicyName"> The name of the threat detection policy. </param>
            <param name="data"> The server security alert policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the server's threat detection policies. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the server's threat detection policies. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the server's threat detection policies. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServerSecurityAlertPoliciesRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the server's threat detection policies. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ServersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.CreateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Creates a new server or updates an existing server. The update action will overwrite the existing server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.Create(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Creates a new server or updates an existing server. The update action will overwrite the existing server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="content"> The required parameters for creating or updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing server. The request body can contain one to many of the properties present in the normal server definition. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlServerPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing server. The request body can contain one to many of the properties present in the normal server definition. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="patch"> The required parameters for updating a server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets information about a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> List all the servers in a given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.RestartAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Restarts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.ServersRestOperations.Restart(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Restarts a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TopQueryStatisticsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve the query statistic for specified identifier. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryStatisticId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve the query statistic for specified identifier. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="queryStatisticId"> The Query Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryStatisticId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="queryStatisticId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.ListByServerAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store top queries for specified metric and aggregation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.ListByServer(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store top queries for specified metric and aggregation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store top queries for specified metric and aggregation. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.TopQueryStatisticsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlTopQueryStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve the Query-Store top queries for specified metric and aggregation. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving top query statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of VirtualNetworkRulesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a virtual network rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a virtual network rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary> Creates or updates an existing virtual network rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="virtualNetworkRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleData,System.Threading.CancellationToken)">
            <summary> Creates or updates an existing virtual network rule. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="data"> The requested virtual Network Rule Resource state. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="virtualNetworkRuleName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the virtual network rule with the given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the virtual network rule with the given name. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.ListByServerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of virtual network rules in a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.ListByServer(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of virtual network rules in a server. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of virtual network rules in a server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.VirtualNetworkRulesRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of virtual network rules in a server. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of WaitStatisticsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified identifier. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="waitStatisticsId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified identifier. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="waitStatisticsId"> The Wait Statistic identifier. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="waitStatisticsId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="waitStatisticsId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.ListByServerAsync(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified aggregation window. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.ListByServer(System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified aggregation window. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.ListByServerNextPageAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified aggregation window. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.MySql.WaitStatisticsRestOperations.ListByServerNextPage(System.String,System.String,System.String,System.String,Azure.ResourceManager.MySql.Models.MySqlWaitStatisticsInput,System.Threading.CancellationToken)">
            <summary> Retrieve wait statistics for specified aggregation window. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="serverName"> The name of the server. </param>
            <param name="input"> The required parameters for retrieving wait statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="serverName" /> or <paramref name="input" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter">
            <summary> JsonConverter for managed service identity type v3. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Write(System.Text.Json.Utf8JsonWriter,Azure.ResourceManager.Models.ManagedServiceIdentityType,System.Text.Json.JsonSerializerOptions)">
            <summary> Serialize managed service identity type to v3 format. </summary>
            <param name="writer"> The writer. </param>
            <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary> Deserialize managed service identity type from v3 format. </summary>
            <param name="reader"> The reader. </param>
            <param name="typeToConvert"> The type to convert </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="T:Azure.ResourceManager.SharedExtensions">
            <summary>
            helper class
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.SubstringAfterProviderNamespace(Azure.Core.ResourceIdentifier)">
            <summary>
            Collects the segments in a resource identifier into a string
            </summary>
            <param name="resourceId">the resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.ReplaceWith(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            An extension method for supporting replacing one dictionary content with another one.
            This is used to support resource tags.
            </summary>
            <param name="dest"> The destination dictionary in which the content will be replaced. </param>
            <param name="src"> The source dictionary from which the content is copied from. </param>
            <returns> The destination dictionary that has been altered. </returns>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" />. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy" /> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval" />.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceparent(System.String)">
            <summary>
            Sets the trace parent for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.AssertEnumDefined(System.Type,System.Object,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not defined for <paramref name="enumType" />.
            </summary>
            <param name="enumType">The type to validate against.</param>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not defined for <paramref name="enumType" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlAdvisorResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlAdvisorCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlAdvisorResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlConfigurationResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlConfigurationCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlConfigurationResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlDatabaseResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlDatabaseCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlDatabaseResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlFirewallRuleResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlFirewallRuleCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlFirewallRuleResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlPrivateEndpointConnectionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateEndpointConnectionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlPrivateEndpointConnectionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlPrivateLinkResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlPrivateLinkResourceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlPrivateLinkResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlRecommendationActionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlRecommendationActionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlRecommendationActionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlServerResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlServerResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlServerKeyResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerKeyCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlServerKeyResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlServerSecurityAlertPolicyResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlServerSecurityAlertPolicyCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlServerSecurityAlertPolicyResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#MySqlVirtualNetworkRuleResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.MySqlVirtualNetworkRuleCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#MySqlVirtualNetworkRuleResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerBackupResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerBackupCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerBackupResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerConfigurationResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerConfigurationCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerConfigurationResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerDatabaseResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerDatabaseCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerDatabaseResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerFirewallRuleResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerFirewallRuleCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#MySql#FlexibleServers#MySqlFlexibleServerFirewallRuleResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
